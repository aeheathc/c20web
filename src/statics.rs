use std::collections::HashMap;
use std::sync::RwLock;
use config::Config;

lazy_static!
{
	pub static ref DEFAULT_CONFIG: String = String::from("listen_addr = \"127.0.0.1:7878\"\nworking_dir = \"data\"\nwebroot = \"webroot\"\nthreads_max = 100\nrequest_max_bytes = 1000");

	pub static ref SETTINGS: RwLock<Config> = RwLock::new(Config::default());

	pub static ref MIME_BY_EXTENSION: HashMap<String, String> = {
		let mut types = HashMap::<String, String>::new();
		types.insert(String::from("323"), String::from("text/h323"));
		types.insert(String::from("3g2"), String::from("video/3gpp2"));
		types.insert(String::from("3gp"), String::from("video/3gpp"));
		types.insert(String::from("3gp2"), String::from("video/3gpp2"));
		types.insert(String::from("3gpp"), String::from("video/3gpp"));
		types.insert(String::from("7z"), String::from("application/x-7z-compressed"));
		types.insert(String::from("aa"), String::from("audio/audible"));
		types.insert(String::from("AAC"), String::from("audio/aac"));
		types.insert(String::from("aaf"), String::from("application/octet-stream"));
		types.insert(String::from("aax"), String::from("audio/vnd.audible.aax"));
		types.insert(String::from("ac3"), String::from("audio/ac3"));
		types.insert(String::from("aca"), String::from("application/octet-stream"));
		types.insert(String::from("accda"), String::from("application/msaccess.addin"));
		types.insert(String::from("accdb"), String::from("application/msaccess"));
		types.insert(String::from("accdc"), String::from("application/msaccess.cab"));
		types.insert(String::from("accde"), String::from("application/msaccess"));
		types.insert(String::from("accdr"), String::from("application/msaccess.runtime"));
		types.insert(String::from("accdt"), String::from("application/msaccess"));
		types.insert(String::from("accdw"), String::from("application/msaccess.webapplication"));
		types.insert(String::from("accft"), String::from("application/msaccess.ftemplate"));
		types.insert(String::from("acx"), String::from("application/internet-property-stream"));
		types.insert(String::from("AddIn"), String::from("text/xml"));
		types.insert(String::from("ade"), String::from("application/msaccess"));
		types.insert(String::from("adobebridge"), String::from("application/x-bridge-url"));
		types.insert(String::from("adp"), String::from("application/msaccess"));
		types.insert(String::from("ADT"), String::from("audio/vnd.dlna.adts"));
		types.insert(String::from("ADTS"), String::from("audio/aac"));
		types.insert(String::from("afm"), String::from("application/octet-stream"));
		types.insert(String::from("ai"), String::from("application/postscript"));
		types.insert(String::from("aif"), String::from("audio/aiff"));
		types.insert(String::from("aifc"), String::from("audio/aiff"));
		types.insert(String::from("aiff"), String::from("audio/aiff"));
		types.insert(String::from("air"), String::from("application/vnd.adobe.air-application-installer-package+zip"));
		types.insert(String::from("amc"), String::from("application/mpeg"));
		types.insert(String::from("anx"), String::from("application/annodex"));
		types.insert(String::from("apk"), String::from("application/vnd.android.package-archive"));
		types.insert(String::from("application"), String::from("application/x-ms-application"));
		types.insert(String::from("art"), String::from("image/x-jg"));
		types.insert(String::from("asa"), String::from("application/xml"));
		types.insert(String::from("asax"), String::from("application/xml"));
		types.insert(String::from("ascx"), String::from("application/xml"));
		types.insert(String::from("asd"), String::from("application/octet-stream"));
		types.insert(String::from("asf"), String::from("video/x-ms-asf"));
		types.insert(String::from("ashx"), String::from("application/xml"));
		types.insert(String::from("asi"), String::from("application/octet-stream"));
		types.insert(String::from("asm"), String::from("text/plain"));
		types.insert(String::from("asmx"), String::from("application/xml"));
		types.insert(String::from("aspx"), String::from("application/xml"));
		types.insert(String::from("asr"), String::from("video/x-ms-asf"));
		types.insert(String::from("asx"), String::from("video/x-ms-asf"));
		types.insert(String::from("atom"), String::from("application/atom+xml"));
		types.insert(String::from("au"), String::from("audio/basic"));
		types.insert(String::from("avi"), String::from("video/x-msvideo"));
		types.insert(String::from("axa"), String::from("audio/annodex"));
		types.insert(String::from("axs"), String::from("application/olescript"));
		types.insert(String::from("axv"), String::from("video/annodex"));
		types.insert(String::from("bas"), String::from("text/plain"));
		types.insert(String::from("bcpio"), String::from("application/x-bcpio"));
		types.insert(String::from("bin"), String::from("application/octet-stream"));
		types.insert(String::from("bmp"), String::from("image/bmp"));
		types.insert(String::from("c"), String::from("text/plain"));
		types.insert(String::from("cab"), String::from("application/octet-stream"));
		types.insert(String::from("caf"), String::from("audio/x-caf"));
		types.insert(String::from("calx"), String::from("application/vnd.ms-office.calx"));
		types.insert(String::from("cat"), String::from("application/vnd.ms-pki.seccat"));
		types.insert(String::from("cc"), String::from("text/plain"));
		types.insert(String::from("cd"), String::from("text/plain"));
		types.insert(String::from("cdda"), String::from("audio/aiff"));
		types.insert(String::from("cdf"), String::from("application/x-cdf"));
		types.insert(String::from("cer"), String::from("application/x-x509-ca-cert"));
		types.insert(String::from("cfg"), String::from("text/plain"));
		types.insert(String::from("chm"), String::from("application/octet-stream"));
		types.insert(String::from("class"), String::from("application/x-java-applet"));
		types.insert(String::from("clp"), String::from("application/x-msclip"));
		types.insert(String::from("cmd"), String::from("text/plain"));
		types.insert(String::from("cmx"), String::from("image/x-cmx"));
		types.insert(String::from("cnf"), String::from("text/plain"));
		types.insert(String::from("cod"), String::from("image/cis-cod"));
		types.insert(String::from("config"), String::from("application/xml"));
		types.insert(String::from("contact"), String::from("text/x-ms-contact"));
		types.insert(String::from("coverage"), String::from("application/xml"));
		types.insert(String::from("cpio"), String::from("application/x-cpio"));
		types.insert(String::from("cpp"), String::from("text/plain"));
		types.insert(String::from("crd"), String::from("application/x-mscardfile"));
		types.insert(String::from("crl"), String::from("application/pkix-crl"));
		types.insert(String::from("crt"), String::from("application/x-x509-ca-cert"));
		types.insert(String::from("cs"), String::from("text/plain"));
		types.insert(String::from("csdproj"), String::from("text/plain"));
		types.insert(String::from("csh"), String::from("application/x-csh"));
		types.insert(String::from("csproj"), String::from("text/plain"));
		types.insert(String::from("css"), String::from("text/css"));
		types.insert(String::from("csv"), String::from("text/csv"));
		types.insert(String::from("cur"), String::from("application/octet-stream"));
		types.insert(String::from("cxx"), String::from("text/plain"));
		types.insert(String::from("dat"), String::from("application/octet-stream"));
		types.insert(String::from("datasource"), String::from("application/xml"));
		types.insert(String::from("dbproj"), String::from("text/plain"));
		types.insert(String::from("dcr"), String::from("application/x-director"));
		types.insert(String::from("def"), String::from("text/plain"));
		types.insert(String::from("deploy"), String::from("application/octet-stream"));
		types.insert(String::from("der"), String::from("application/x-x509-ca-cert"));
		types.insert(String::from("dgml"), String::from("application/xml"));
		types.insert(String::from("dib"), String::from("image/bmp"));
		types.insert(String::from("dif"), String::from("video/x-dv"));
		types.insert(String::from("dir"), String::from("application/x-director"));
		types.insert(String::from("disco"), String::from("text/xml"));
		types.insert(String::from("divx"), String::from("video/divx"));
		types.insert(String::from("dll"), String::from("application/x-msdownload"));
		types.insert(String::from("dll.config"), String::from("text/xml"));
		types.insert(String::from("dlm"), String::from("text/dlm"));
		types.insert(String::from("doc"), String::from("application/msword"));
		types.insert(String::from("docm"), String::from("application/vnd.ms-word.document.macroEnabled.12"));
		types.insert(String::from("docx"), String::from("application/vnd.openxmlformats-officedocument.wordprocessingml.document"));
		types.insert(String::from("dot"), String::from("application/msword"));
		types.insert(String::from("dotm"), String::from("application/vnd.ms-word.template.macroEnabled.12"));
		types.insert(String::from("dotx"), String::from("application/vnd.openxmlformats-officedocument.wordprocessingml.template"));
		types.insert(String::from("dsp"), String::from("application/octet-stream"));
		types.insert(String::from("dsw"), String::from("text/plain"));
		types.insert(String::from("dtd"), String::from("text/xml"));
		types.insert(String::from("dtsConfig"), String::from("text/xml"));
		types.insert(String::from("dv"), String::from("video/x-dv"));
		types.insert(String::from("dvi"), String::from("application/x-dvi"));
		types.insert(String::from("dwf"), String::from("drawing/x-dwf"));
		types.insert(String::from("dwg"), String::from("application/acad"));
		types.insert(String::from("dwp"), String::from("application/octet-stream"));
		types.insert(String::from("dxf"), String::from("application/x-dxf"));
		types.insert(String::from("dxr"), String::from("application/x-director"));
		types.insert(String::from("eml"), String::from("message/rfc822"));
		types.insert(String::from("emf"), String::from("image/emf"));
		types.insert(String::from("emz"), String::from("application/octet-stream"));
		types.insert(String::from("eot"), String::from("application/vnd.ms-fontobject"));
		types.insert(String::from("eps"), String::from("application/postscript"));
		types.insert(String::from("es"), String::from("application/ecmascript"));
		types.insert(String::from("etl"), String::from("application/etl"));
		types.insert(String::from("etx"), String::from("text/x-setext"));
		types.insert(String::from("evy"), String::from("application/envoy"));
		types.insert(String::from("exe"), String::from("application/vnd.microsoft.portable-executable"));
		types.insert(String::from("exe.config"), String::from("text/xml"));
		types.insert(String::from("f4v"), String::from("video/mp4"));
		types.insert(String::from("fdf"), String::from("application/vnd.fdf"));
		types.insert(String::from("fif"), String::from("application/fractals"));
		types.insert(String::from("filters"), String::from("application/xml"));
		types.insert(String::from("fla"), String::from("application/octet-stream"));
		types.insert(String::from("flac"), String::from("audio/flac"));
		types.insert(String::from("flr"), String::from("x-world/x-vrml"));
		types.insert(String::from("flv"), String::from("video/x-flv"));
		types.insert(String::from("fsscript"), String::from("application/fsharp-script"));
		types.insert(String::from("fsx"), String::from("application/fsharp-script"));
		types.insert(String::from("generictest"), String::from("application/xml"));
		types.insert(String::from("gif"), String::from("image/gif"));
		types.insert(String::from("gpx"), String::from("application/gpx+xml"));
		types.insert(String::from("group"), String::from("text/x-ms-group"));
		types.insert(String::from("gsm"), String::from("audio/x-gsm"));
		types.insert(String::from("gtar"), String::from("application/x-gtar"));
		types.insert(String::from("gz"), String::from("application/x-gzip"));
		types.insert(String::from("h"), String::from("text/plain"));
		types.insert(String::from("hdf"), String::from("application/x-hdf"));
		types.insert(String::from("hdml"), String::from("text/x-hdml"));
		types.insert(String::from("hhc"), String::from("application/x-oleobject"));
		types.insert(String::from("hhk"), String::from("application/octet-stream"));
		types.insert(String::from("hhp"), String::from("application/octet-stream"));
		types.insert(String::from("hlp"), String::from("application/winhlp"));
		types.insert(String::from("hpp"), String::from("text/plain"));
		types.insert(String::from("hqx"), String::from("application/mac-binhex40"));
		types.insert(String::from("hta"), String::from("application/hta"));
		types.insert(String::from("htc"), String::from("text/x-component"));
		types.insert(String::from("htm"), String::from("text/html"));
		types.insert(String::from("html"), String::from("text/html"));
		types.insert(String::from("htt"), String::from("text/webviewhtml"));
		types.insert(String::from("hxa"), String::from("application/xml"));
		types.insert(String::from("hxc"), String::from("application/xml"));
		types.insert(String::from("hxd"), String::from("application/octet-stream"));
		types.insert(String::from("hxe"), String::from("application/xml"));
		types.insert(String::from("hxf"), String::from("application/xml"));
		types.insert(String::from("hxh"), String::from("application/octet-stream"));
		types.insert(String::from("hxi"), String::from("application/octet-stream"));
		types.insert(String::from("hxk"), String::from("application/xml"));
		types.insert(String::from("hxq"), String::from("application/octet-stream"));
		types.insert(String::from("hxr"), String::from("application/octet-stream"));
		types.insert(String::from("hxs"), String::from("application/octet-stream"));
		types.insert(String::from("hxt"), String::from("text/html"));
		types.insert(String::from("hxv"), String::from("application/xml"));
		types.insert(String::from("hxw"), String::from("application/octet-stream"));
		types.insert(String::from("hxx"), String::from("text/plain"));
		types.insert(String::from("i"), String::from("text/plain"));
		types.insert(String::from("ical"), String::from("text/calendar"));
		types.insert(String::from("icalendar"), String::from("text/calendar"));
		types.insert(String::from("ico"), String::from("image/x-icon"));
		types.insert(String::from("ics"), String::from("text/calendar"));
		types.insert(String::from("idl"), String::from("text/plain"));
		types.insert(String::from("ief"), String::from("image/ief"));
		types.insert(String::from("ifb"), String::from("text/calendar"));
		types.insert(String::from("iii"), String::from("application/x-iphone"));
		types.insert(String::from("inc"), String::from("text/plain"));
		types.insert(String::from("inf"), String::from("application/octet-stream"));
		types.insert(String::from("ini"), String::from("text/plain"));
		types.insert(String::from("inl"), String::from("text/plain"));
		types.insert(String::from("ins"), String::from("application/x-internet-signup"));
		types.insert(String::from("ipa"), String::from("application/x-itunes-ipa"));
		types.insert(String::from("ipg"), String::from("application/x-itunes-ipg"));
		types.insert(String::from("ipproj"), String::from("text/plain"));
		types.insert(String::from("ipsw"), String::from("application/x-itunes-ipsw"));
		types.insert(String::from("iqy"), String::from("text/x-ms-iqy"));
		types.insert(String::from("isp"), String::from("application/x-internet-signup"));
		types.insert(String::from("isma"), String::from("application/octet-stream"));
		types.insert(String::from("ismv"), String::from("application/octet-stream"));
		types.insert(String::from("ite"), String::from("application/x-itunes-ite"));
		types.insert(String::from("itlp"), String::from("application/x-itunes-itlp"));
		types.insert(String::from("itms"), String::from("application/x-itunes-itms"));
		types.insert(String::from("itpc"), String::from("application/x-itunes-itpc"));
		types.insert(String::from("IVF"), String::from("video/x-ivf"));
		types.insert(String::from("jar"), String::from("application/java-archive"));
		types.insert(String::from("java"), String::from("application/octet-stream"));
		types.insert(String::from("jck"), String::from("application/liquidmotion"));
		types.insert(String::from("jcz"), String::from("application/liquidmotion"));
		types.insert(String::from("jfif"), String::from("image/pjpeg"));
		types.insert(String::from("jnlp"), String::from("application/x-java-jnlp-file"));
		types.insert(String::from("jpb"), String::from("application/octet-stream"));
		types.insert(String::from("jpe"), String::from("image/jpeg"));
		types.insert(String::from("jpeg"), String::from("image/jpeg"));
		types.insert(String::from("jpg"), String::from("image/jpeg"));
		types.insert(String::from("js"), String::from("application/javascript"));
		types.insert(String::from("json"), String::from("application/json"));
		types.insert(String::from("jsx"), String::from("text/jscript"));
		types.insert(String::from("jsxbin"), String::from("text/plain"));
		types.insert(String::from("latex"), String::from("application/x-latex"));
		types.insert(String::from("library-ms"), String::from("application/windows-library+xml"));
		types.insert(String::from("lit"), String::from("application/x-ms-reader"));
		types.insert(String::from("loadtest"), String::from("application/xml"));
		types.insert(String::from("lpk"), String::from("application/octet-stream"));
		types.insert(String::from("lsf"), String::from("video/x-la-asf"));
		types.insert(String::from("lst"), String::from("text/plain"));
		types.insert(String::from("lsx"), String::from("video/x-la-asf"));
		types.insert(String::from("lzh"), String::from("application/octet-stream"));
		types.insert(String::from("m13"), String::from("application/x-msmediaview"));
		types.insert(String::from("m14"), String::from("application/x-msmediaview"));
		types.insert(String::from("m1v"), String::from("video/mpeg"));
		types.insert(String::from("m2t"), String::from("video/vnd.dlna.mpeg-tts"));
		types.insert(String::from("m2ts"), String::from("video/vnd.dlna.mpeg-tts"));
		types.insert(String::from("m2v"), String::from("video/mpeg"));
		types.insert(String::from("m3u"), String::from("audio/x-mpegurl"));
		types.insert(String::from("m3u8"), String::from("audio/x-mpegurl"));
		types.insert(String::from("m4a"), String::from("audio/m4a"));
		types.insert(String::from("m4b"), String::from("audio/m4b"));
		types.insert(String::from("m4p"), String::from("audio/m4p"));
		types.insert(String::from("m4r"), String::from("audio/x-m4r"));
		types.insert(String::from("m4v"), String::from("video/x-m4v"));
		types.insert(String::from("mac"), String::from("image/x-macpaint"));
		types.insert(String::from("mak"), String::from("text/plain"));
		types.insert(String::from("man"), String::from("application/x-troff-man"));
		types.insert(String::from("manifest"), String::from("application/x-ms-manifest"));
		types.insert(String::from("map"), String::from("text/plain"));
		types.insert(String::from("master"), String::from("application/xml"));
		types.insert(String::from("mbox"), String::from("application/mbox"));
		types.insert(String::from("mda"), String::from("application/msaccess"));
		types.insert(String::from("mdb"), String::from("application/x-msaccess"));
		types.insert(String::from("mde"), String::from("application/msaccess"));
		types.insert(String::from("mdp"), String::from("application/octet-stream"));
		types.insert(String::from("me"), String::from("application/x-troff-me"));
		types.insert(String::from("mfp"), String::from("application/x-shockwave-flash"));
		types.insert(String::from("mht"), String::from("message/rfc822"));
		types.insert(String::from("mhtml"), String::from("message/rfc822"));
		types.insert(String::from("mid"), String::from("audio/mid"));
		types.insert(String::from("midi"), String::from("audio/mid"));
		types.insert(String::from("mix"), String::from("application/octet-stream"));
		types.insert(String::from("mk"), String::from("text/plain"));
		types.insert(String::from("mk3d"), String::from("video/x-matroska-3d"));
		types.insert(String::from("mka"), String::from("audio/x-matroska"));
		types.insert(String::from("mkv"), String::from("video/x-matroska"));
		types.insert(String::from("mmf"), String::from("application/x-smaf"));
		types.insert(String::from("mno"), String::from("text/xml"));
		types.insert(String::from("mny"), String::from("application/x-msmoney"));
		types.insert(String::from("mod"), String::from("video/mpeg"));
		types.insert(String::from("mov"), String::from("video/quicktime"));
		types.insert(String::from("movie"), String::from("video/x-sgi-movie"));
		types.insert(String::from("mp2"), String::from("video/mpeg"));
		types.insert(String::from("mp2v"), String::from("video/mpeg"));
		types.insert(String::from("mp3"), String::from("audio/mpeg"));
		types.insert(String::from("mp4"), String::from("video/mp4"));
		types.insert(String::from("mp4v"), String::from("video/mp4"));
		types.insert(String::from("mpa"), String::from("video/mpeg"));
		types.insert(String::from("mpe"), String::from("video/mpeg"));
		types.insert(String::from("mpeg"), String::from("video/mpeg"));
		types.insert(String::from("mpf"), String::from("application/vnd.ms-mediapackage"));
		types.insert(String::from("mpg"), String::from("video/mpeg"));
		types.insert(String::from("mpp"), String::from("application/vnd.ms-project"));
		types.insert(String::from("mpv2"), String::from("video/mpeg"));
		types.insert(String::from("mqv"), String::from("video/quicktime"));
		types.insert(String::from("ms"), String::from("application/x-troff-ms"));
		types.insert(String::from("msg"), String::from("application/vnd.ms-outlook"));
		types.insert(String::from("msi"), String::from("application/octet-stream"));
		types.insert(String::from("mso"), String::from("application/octet-stream"));
		types.insert(String::from("mts"), String::from("video/vnd.dlna.mpeg-tts"));
		types.insert(String::from("mtx"), String::from("application/xml"));
		types.insert(String::from("mvb"), String::from("application/x-msmediaview"));
		types.insert(String::from("mvc"), String::from("application/x-miva-compiled"));
		types.insert(String::from("mxf"), String::from("application/mxf"));
		types.insert(String::from("mxp"), String::from("application/x-mmxp"));
		types.insert(String::from("nc"), String::from("application/x-netcdf"));
		types.insert(String::from("nsc"), String::from("video/x-ms-asf"));
		types.insert(String::from("nws"), String::from("message/rfc822"));
		types.insert(String::from("ocx"), String::from("application/octet-stream"));
		types.insert(String::from("oda"), String::from("application/oda"));
		types.insert(String::from("odb"), String::from("application/vnd.oasis.opendocument.database"));
		types.insert(String::from("odc"), String::from("application/vnd.oasis.opendocument.chart"));
		types.insert(String::from("odf"), String::from("application/vnd.oasis.opendocument.formula"));
		types.insert(String::from("odg"), String::from("application/vnd.oasis.opendocument.graphics"));
		types.insert(String::from("odh"), String::from("text/plain"));
		types.insert(String::from("odi"), String::from("application/vnd.oasis.opendocument.image"));
		types.insert(String::from("odl"), String::from("text/plain"));
		types.insert(String::from("odm"), String::from("application/vnd.oasis.opendocument.text-master"));
		types.insert(String::from("odp"), String::from("application/vnd.oasis.opendocument.presentation"));
		types.insert(String::from("ods"), String::from("application/vnd.oasis.opendocument.spreadsheet"));
		types.insert(String::from("odt"), String::from("application/vnd.oasis.opendocument.text"));
		types.insert(String::from("oga"), String::from("audio/ogg"));
		types.insert(String::from("ogg"), String::from("audio/ogg"));
		types.insert(String::from("ogv"), String::from("video/ogg"));
		types.insert(String::from("ogx"), String::from("application/ogg"));
		types.insert(String::from("one"), String::from("application/onenote"));
		types.insert(String::from("onea"), String::from("application/onenote"));
		types.insert(String::from("onepkg"), String::from("application/onenote"));
		types.insert(String::from("onetmp"), String::from("application/onenote"));
		types.insert(String::from("onetoc"), String::from("application/onenote"));
		types.insert(String::from("onetoc2"), String::from("application/onenote"));
		types.insert(String::from("opus"), String::from("audio/ogg"));
		types.insert(String::from("orderedtest"), String::from("application/xml"));
		types.insert(String::from("osdx"), String::from("application/opensearchdescription+xml"));
		types.insert(String::from("otf"), String::from("application/font-sfnt"));
		types.insert(String::from("otg"), String::from("application/vnd.oasis.opendocument.graphics-template"));
		types.insert(String::from("oth"), String::from("application/vnd.oasis.opendocument.text-web"));
		types.insert(String::from("otp"), String::from("application/vnd.oasis.opendocument.presentation-template"));
		types.insert(String::from("ots"), String::from("application/vnd.oasis.opendocument.spreadsheet-template"));
		types.insert(String::from("ott"), String::from("application/vnd.oasis.opendocument.text-template"));
		types.insert(String::from("oxt"), String::from("application/vnd.openofficeorg.extension"));
		types.insert(String::from("p10"), String::from("application/pkcs10"));
		types.insert(String::from("p12"), String::from("application/x-pkcs12"));
		types.insert(String::from("p7b"), String::from("application/x-pkcs7-certificates"));
		types.insert(String::from("p7c"), String::from("application/pkcs7-mime"));
		types.insert(String::from("p7m"), String::from("application/pkcs7-mime"));
		types.insert(String::from("p7r"), String::from("application/x-pkcs7-certreqresp"));
		types.insert(String::from("p7s"), String::from("application/pkcs7-signature"));
		types.insert(String::from("pbm"), String::from("image/x-portable-bitmap"));
		types.insert(String::from("pcast"), String::from("application/x-podcast"));
		types.insert(String::from("pct"), String::from("image/pict"));
		types.insert(String::from("pcx"), String::from("application/octet-stream"));
		types.insert(String::from("pcz"), String::from("application/octet-stream"));
		types.insert(String::from("pdf"), String::from("application/pdf"));
		types.insert(String::from("pfb"), String::from("application/octet-stream"));
		types.insert(String::from("pfm"), String::from("application/octet-stream"));
		types.insert(String::from("pfx"), String::from("application/x-pkcs12"));
		types.insert(String::from("pgm"), String::from("image/x-portable-graymap"));
		types.insert(String::from("pic"), String::from("image/pict"));
		types.insert(String::from("pict"), String::from("image/pict"));
		types.insert(String::from("pkgdef"), String::from("text/plain"));
		types.insert(String::from("pkgundef"), String::from("text/plain"));
		types.insert(String::from("pko"), String::from("application/vnd.ms-pki.pko"));
		types.insert(String::from("pls"), String::from("audio/scpls"));
		types.insert(String::from("pma"), String::from("application/x-perfmon"));
		types.insert(String::from("pmc"), String::from("application/x-perfmon"));
		types.insert(String::from("pml"), String::from("application/x-perfmon"));
		types.insert(String::from("pmr"), String::from("application/x-perfmon"));
		types.insert(String::from("pmw"), String::from("application/x-perfmon"));
		types.insert(String::from("png"), String::from("image/png"));
		types.insert(String::from("pnm"), String::from("image/x-portable-anymap"));
		types.insert(String::from("pnt"), String::from("image/x-macpaint"));
		types.insert(String::from("pntg"), String::from("image/x-macpaint"));
		types.insert(String::from("pnz"), String::from("image/png"));
		types.insert(String::from("pot"), String::from("application/vnd.ms-powerpoint"));
		types.insert(String::from("potm"), String::from("application/vnd.ms-powerpoint.template.macroEnabled.12"));
		types.insert(String::from("potx"), String::from("application/vnd.openxmlformats-officedocument.presentationml.template"));
		types.insert(String::from("ppa"), String::from("application/vnd.ms-powerpoint"));
		types.insert(String::from("ppam"), String::from("application/vnd.ms-powerpoint.addin.macroEnabled.12"));
		types.insert(String::from("ppm"), String::from("image/x-portable-pixmap"));
		types.insert(String::from("pps"), String::from("application/vnd.ms-powerpoint"));
		types.insert(String::from("ppsm"), String::from("application/vnd.ms-powerpoint.slideshow.macroEnabled.12"));
		types.insert(String::from("ppsx"), String::from("application/vnd.openxmlformats-officedocument.presentationml.slideshow"));
		types.insert(String::from("ppt"), String::from("application/vnd.ms-powerpoint"));
		types.insert(String::from("pptm"), String::from("application/vnd.ms-powerpoint.presentation.macroEnabled.12"));
		types.insert(String::from("pptx"), String::from("application/vnd.openxmlformats-officedocument.presentationml.presentation"));
		types.insert(String::from("prf"), String::from("application/pics-rules"));
		types.insert(String::from("prm"), String::from("application/octet-stream"));
		types.insert(String::from("prx"), String::from("application/octet-stream"));
		types.insert(String::from("ps"), String::from("application/postscript"));
		types.insert(String::from("psc1"), String::from("application/PowerShell"));
		types.insert(String::from("psd"), String::from("application/octet-stream"));
		types.insert(String::from("psess"), String::from("application/xml"));
		types.insert(String::from("psm"), String::from("application/octet-stream"));
		types.insert(String::from("psp"), String::from("application/octet-stream"));
		types.insert(String::from("pst"), String::from("application/vnd.ms-outlook"));
		types.insert(String::from("pub"), String::from("application/x-mspublisher"));
		types.insert(String::from("pwz"), String::from("application/vnd.ms-powerpoint"));
		types.insert(String::from("qht"), String::from("text/x-html-insertion"));
		types.insert(String::from("qhtm"), String::from("text/x-html-insertion"));
		types.insert(String::from("qt"), String::from("video/quicktime"));
		types.insert(String::from("qti"), String::from("image/x-quicktime"));
		types.insert(String::from("qtif"), String::from("image/x-quicktime"));
		types.insert(String::from("qtl"), String::from("application/x-quicktimeplayer"));
		types.insert(String::from("qxd"), String::from("application/octet-stream"));
		types.insert(String::from("ra"), String::from("audio/x-pn-realaudio"));
		types.insert(String::from("ram"), String::from("audio/x-pn-realaudio"));
		types.insert(String::from("rar"), String::from("application/x-rar-compressed"));
		types.insert(String::from("ras"), String::from("image/x-cmu-raster"));
		types.insert(String::from("rat"), String::from("application/rat-file"));
		types.insert(String::from("rc"), String::from("text/plain"));
		types.insert(String::from("rc2"), String::from("text/plain"));
		types.insert(String::from("rct"), String::from("text/plain"));
		types.insert(String::from("rdlc"), String::from("application/xml"));
		types.insert(String::from("reg"), String::from("text/plain"));
		types.insert(String::from("resx"), String::from("application/xml"));
		types.insert(String::from("rf"), String::from("image/vnd.rn-realflash"));
		types.insert(String::from("rgb"), String::from("image/x-rgb"));
		types.insert(String::from("rgs"), String::from("text/plain"));
		types.insert(String::from("rm"), String::from("application/vnd.rn-realmedia"));
		types.insert(String::from("rmi"), String::from("audio/mid"));
		types.insert(String::from("rmp"), String::from("application/vnd.rn-rn_music_package"));
		types.insert(String::from("roff"), String::from("application/x-troff"));
		types.insert(String::from("rpm"), String::from("audio/x-pn-realaudio-plugin"));
		types.insert(String::from("rqy"), String::from("text/x-ms-rqy"));
		types.insert(String::from("rtf"), String::from("application/rtf"));
		types.insert(String::from("rtx"), String::from("text/richtext"));
		types.insert(String::from("rvt"), String::from("application/octet-stream"));
		types.insert(String::from("ruleset"), String::from("application/xml"));
		types.insert(String::from("s"), String::from("text/plain"));
		types.insert(String::from("safariextz"), String::from("application/x-safari-safariextz"));
		types.insert(String::from("scd"), String::from("application/x-msschedule"));
		types.insert(String::from("scr"), String::from("text/plain"));
		types.insert(String::from("sct"), String::from("text/scriptlet"));
		types.insert(String::from("sd2"), String::from("audio/x-sd2"));
		types.insert(String::from("sdp"), String::from("application/sdp"));
		types.insert(String::from("sea"), String::from("application/octet-stream"));
		types.insert(String::from("searchConnector-ms"), String::from("application/windows-search-connector+xml"));
		types.insert(String::from("setpay"), String::from("application/set-payment-initiation"));
		types.insert(String::from("setreg"), String::from("application/set-registration-initiation"));
		types.insert(String::from("settings"), String::from("application/xml"));
		types.insert(String::from("sgimb"), String::from("application/x-sgimb"));
		types.insert(String::from("sgml"), String::from("text/sgml"));
		types.insert(String::from("sh"), String::from("application/x-sh"));
		types.insert(String::from("shar"), String::from("application/x-shar"));
		types.insert(String::from("shtml"), String::from("text/html"));
		types.insert(String::from("sit"), String::from("application/x-stuffit"));
		types.insert(String::from("sitemap"), String::from("application/xml"));
		types.insert(String::from("skin"), String::from("application/xml"));
		types.insert(String::from("skp"), String::from("application/x-koan"));
		types.insert(String::from("sldm"), String::from("application/vnd.ms-powerpoint.slide.macroEnabled.12"));
		types.insert(String::from("sldx"), String::from("application/vnd.openxmlformats-officedocument.presentationml.slide"));
		types.insert(String::from("slk"), String::from("application/vnd.ms-excel"));
		types.insert(String::from("sln"), String::from("text/plain"));
		types.insert(String::from("slupkg-ms"), String::from("application/x-ms-license"));
		types.insert(String::from("smd"), String::from("audio/x-smd"));
		types.insert(String::from("smi"), String::from("application/octet-stream"));
		types.insert(String::from("smx"), String::from("audio/x-smd"));
		types.insert(String::from("smz"), String::from("audio/x-smd"));
		types.insert(String::from("snd"), String::from("audio/basic"));
		types.insert(String::from("snippet"), String::from("application/xml"));
		types.insert(String::from("snp"), String::from("application/octet-stream"));
		types.insert(String::from("sol"), String::from("text/plain"));
		types.insert(String::from("sor"), String::from("text/plain"));
		types.insert(String::from("spc"), String::from("application/x-pkcs7-certificates"));
		types.insert(String::from("spl"), String::from("application/futuresplash"));
		types.insert(String::from("spx"), String::from("audio/ogg"));
		types.insert(String::from("src"), String::from("application/x-wais-source"));
		types.insert(String::from("srf"), String::from("text/plain"));
		types.insert(String::from("SSISDeploymentManifest"), String::from("text/xml"));
		types.insert(String::from("ssm"), String::from("application/streamingmedia"));
		types.insert(String::from("sst"), String::from("application/vnd.ms-pki.certstore"));
		types.insert(String::from("stl"), String::from("application/vnd.ms-pki.stl"));
		types.insert(String::from("sv4cpio"), String::from("application/x-sv4cpio"));
		types.insert(String::from("sv4crc"), String::from("application/x-sv4crc"));
		types.insert(String::from("svc"), String::from("application/xml"));
		types.insert(String::from("svg"), String::from("image/svg+xml"));
		types.insert(String::from("swf"), String::from("application/x-shockwave-flash"));
		types.insert(String::from("step"), String::from("application/step"));
		types.insert(String::from("stp"), String::from("application/step"));
		types.insert(String::from("t"), String::from("application/x-troff"));
		types.insert(String::from("tar"), String::from("application/x-tar"));
		types.insert(String::from("tcl"), String::from("application/x-tcl"));
		types.insert(String::from("testrunconfig"), String::from("application/xml"));
		types.insert(String::from("testsettings"), String::from("application/xml"));
		types.insert(String::from("tex"), String::from("application/x-tex"));
		types.insert(String::from("texi"), String::from("application/x-texinfo"));
		types.insert(String::from("texinfo"), String::from("application/x-texinfo"));
		types.insert(String::from("tgz"), String::from("application/x-compressed"));
		types.insert(String::from("thmx"), String::from("application/vnd.ms-officetheme"));
		types.insert(String::from("thn"), String::from("application/octet-stream"));
		types.insert(String::from("tif"), String::from("image/tiff"));
		types.insert(String::from("tiff"), String::from("image/tiff"));
		types.insert(String::from("tlh"), String::from("text/plain"));
		types.insert(String::from("tli"), String::from("text/plain"));
		types.insert(String::from("toc"), String::from("application/octet-stream"));
		types.insert(String::from("tr"), String::from("application/x-troff"));
		types.insert(String::from("trm"), String::from("application/x-msterminal"));
		types.insert(String::from("trx"), String::from("application/xml"));
		types.insert(String::from("ts"), String::from("video/vnd.dlna.mpeg-tts"));
		types.insert(String::from("tsv"), String::from("text/tab-separated-values"));
		types.insert(String::from("ttf"), String::from("application/font-sfnt"));
		types.insert(String::from("tts"), String::from("video/vnd.dlna.mpeg-tts"));
		types.insert(String::from("txt"), String::from("text/plain"));
		types.insert(String::from("u32"), String::from("application/octet-stream"));
		types.insert(String::from("uls"), String::from("text/iuls"));
		types.insert(String::from("user"), String::from("text/plain"));
		types.insert(String::from("ustar"), String::from("application/x-ustar"));
		types.insert(String::from("vb"), String::from("text/plain"));
		types.insert(String::from("vbdproj"), String::from("text/plain"));
		types.insert(String::from("vbk"), String::from("video/mpeg"));
		types.insert(String::from("vbproj"), String::from("text/plain"));
		types.insert(String::from("vbs"), String::from("text/vbscript"));
		types.insert(String::from("vcf"), String::from("text/x-vcard"));
		types.insert(String::from("vcproj"), String::from("application/xml"));
		types.insert(String::from("vcs"), String::from("text/plain"));
		types.insert(String::from("vcxproj"), String::from("application/xml"));
		types.insert(String::from("vddproj"), String::from("text/plain"));
		types.insert(String::from("vdp"), String::from("text/plain"));
		types.insert(String::from("vdproj"), String::from("text/plain"));
		types.insert(String::from("vdx"), String::from("application/vnd.ms-visio.viewer"));
		types.insert(String::from("vml"), String::from("text/xml"));
		types.insert(String::from("vscontent"), String::from("application/xml"));
		types.insert(String::from("vsct"), String::from("text/xml"));
		types.insert(String::from("vsd"), String::from("application/vnd.visio"));
		types.insert(String::from("vsi"), String::from("application/ms-vsi"));
		types.insert(String::from("vsix"), String::from("application/vsix"));
		types.insert(String::from("vsixlangpack"), String::from("text/xml"));
		types.insert(String::from("vsixmanifest"), String::from("text/xml"));
		types.insert(String::from("vsmdi"), String::from("application/xml"));
		types.insert(String::from("vspscc"), String::from("text/plain"));
		types.insert(String::from("vss"), String::from("application/vnd.visio"));
		types.insert(String::from("vsscc"), String::from("text/plain"));
		types.insert(String::from("vssettings"), String::from("text/xml"));
		types.insert(String::from("vssscc"), String::from("text/plain"));
		types.insert(String::from("vst"), String::from("application/vnd.visio"));
		types.insert(String::from("vstemplate"), String::from("text/xml"));
		types.insert(String::from("vsto"), String::from("application/x-ms-vsto"));
		types.insert(String::from("vsw"), String::from("application/vnd.visio"));
		types.insert(String::from("vsx"), String::from("application/vnd.visio"));
		types.insert(String::from("vtt"), String::from("text/vtt"));
		types.insert(String::from("vtx"), String::from("application/vnd.visio"));
		types.insert(String::from("wasm"), String::from("application/wasm"));
		types.insert(String::from("wav"), String::from("audio/wav"));
		types.insert(String::from("wave"), String::from("audio/wav"));
		types.insert(String::from("wax"), String::from("audio/x-ms-wax"));
		types.insert(String::from("wbk"), String::from("application/msword"));
		types.insert(String::from("wbmp"), String::from("image/vnd.wap.wbmp"));
		types.insert(String::from("wcm"), String::from("application/vnd.ms-works"));
		types.insert(String::from("wdb"), String::from("application/vnd.ms-works"));
		types.insert(String::from("wdp"), String::from("image/vnd.ms-photo"));
		types.insert(String::from("webarchive"), String::from("application/x-safari-webarchive"));
		types.insert(String::from("webm"), String::from("video/webm"));
		types.insert(String::from("webp"), String::from("image/webp"));
		types.insert(String::from("webtest"), String::from("application/xml"));
		types.insert(String::from("wiq"), String::from("application/xml"));
		types.insert(String::from("wiz"), String::from("application/msword"));
		types.insert(String::from("wks"), String::from("application/vnd.ms-works"));
		types.insert(String::from("WLMP"), String::from("application/wlmoviemaker"));
		types.insert(String::from("wlpginstall"), String::from("application/x-wlpg-detect"));
		types.insert(String::from("wlpginstall3"), String::from("application/x-wlpg3-detect"));
		types.insert(String::from("wm"), String::from("video/x-ms-wm"));
		types.insert(String::from("wma"), String::from("audio/x-ms-wma"));
		types.insert(String::from("wmd"), String::from("application/x-ms-wmd"));
		types.insert(String::from("wmf"), String::from("application/x-msmetafile"));
		types.insert(String::from("wml"), String::from("text/vnd.wap.wml"));
		types.insert(String::from("wmlc"), String::from("application/vnd.wap.wmlc"));
		types.insert(String::from("wmls"), String::from("text/vnd.wap.wmlscript"));
		types.insert(String::from("wmlsc"), String::from("application/vnd.wap.wmlscriptc"));
		types.insert(String::from("wmp"), String::from("video/x-ms-wmp"));
		types.insert(String::from("wmv"), String::from("video/x-ms-wmv"));
		types.insert(String::from("wmx"), String::from("video/x-ms-wmx"));
		types.insert(String::from("wmz"), String::from("application/x-ms-wmz"));
		types.insert(String::from("woff"), String::from("application/font-woff"));
		types.insert(String::from("woff2"), String::from("application/font-woff2"));
		types.insert(String::from("wpl"), String::from("application/vnd.ms-wpl"));
		types.insert(String::from("wps"), String::from("application/vnd.ms-works"));
		types.insert(String::from("wri"), String::from("application/x-mswrite"));
		types.insert(String::from("wrl"), String::from("x-world/x-vrml"));
		types.insert(String::from("wrz"), String::from("x-world/x-vrml"));
		types.insert(String::from("wsc"), String::from("text/scriptlet"));
		types.insert(String::from("wsdl"), String::from("text/xml"));
		types.insert(String::from("wvx"), String::from("video/x-ms-wvx"));
		types.insert(String::from("x"), String::from("application/directx"));
		types.insert(String::from("xaf"), String::from("x-world/x-vrml"));
		types.insert(String::from("xaml"), String::from("application/xaml+xml"));
		types.insert(String::from("xap"), String::from("application/x-silverlight-app"));
		types.insert(String::from("xbap"), String::from("application/x-ms-xbap"));
		types.insert(String::from("xbm"), String::from("image/x-xbitmap"));
		types.insert(String::from("xdr"), String::from("text/plain"));
		types.insert(String::from("xht"), String::from("application/xhtml+xml"));
		types.insert(String::from("xhtml"), String::from("application/xhtml+xml"));
		types.insert(String::from("xla"), String::from("application/vnd.ms-excel"));
		types.insert(String::from("xlam"), String::from("application/vnd.ms-excel.addin.macroEnabled.12"));
		types.insert(String::from("xlc"), String::from("application/vnd.ms-excel"));
		types.insert(String::from("xld"), String::from("application/vnd.ms-excel"));
		types.insert(String::from("xlk"), String::from("application/vnd.ms-excel"));
		types.insert(String::from("xll"), String::from("application/vnd.ms-excel"));
		types.insert(String::from("xlm"), String::from("application/vnd.ms-excel"));
		types.insert(String::from("xls"), String::from("application/vnd.ms-excel"));
		types.insert(String::from("xlsb"), String::from("application/vnd.ms-excel.sheet.binary.macroEnabled.12"));
		types.insert(String::from("xlsm"), String::from("application/vnd.ms-excel.sheet.macroEnabled.12"));
		types.insert(String::from("xlsx"), String::from("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"));
		types.insert(String::from("xlt"), String::from("application/vnd.ms-excel"));
		types.insert(String::from("xltm"), String::from("application/vnd.ms-excel.template.macroEnabled.12"));
		types.insert(String::from("xltx"), String::from("application/vnd.openxmlformats-officedocument.spreadsheetml.template"));
		types.insert(String::from("xlw"), String::from("application/vnd.ms-excel"));
		types.insert(String::from("xml"), String::from("text/xml"));
		types.insert(String::from("xmp"), String::from("application/octet-stream"));
		types.insert(String::from("xmta"), String::from("application/xml"));
		types.insert(String::from("xof"), String::from("x-world/x-vrml"));
		types.insert(String::from("XOML"), String::from("text/plain"));
		types.insert(String::from("xpm"), String::from("image/x-xpixmap"));
		types.insert(String::from("xps"), String::from("application/vnd.ms-xpsdocument"));
		types.insert(String::from("xrm-ms"), String::from("text/xml"));
		types.insert(String::from("xsc"), String::from("application/xml"));
		types.insert(String::from("xsd"), String::from("text/xml"));
		types.insert(String::from("xsf"), String::from("text/xml"));
		types.insert(String::from("xsl"), String::from("text/xml"));
		types.insert(String::from("xslt"), String::from("text/xml"));
		types.insert(String::from("xsn"), String::from("application/octet-stream"));
		types.insert(String::from("xss"), String::from("application/xml"));
		types.insert(String::from("xspf"), String::from("application/xspf+xml"));
		types.insert(String::from("xtp"), String::from("application/octet-stream"));
		types.insert(String::from("xwd"), String::from("image/x-xwindowdump"));
		types.insert(String::from("z"), String::from("application/x-compress"));
		types.insert(String::from("zip"), String::from("application/zip"));
		types
	};

    pub static ref HTTP_RESPONSE_TABLE: HashMap<u16,String> = {
        let mut codes = HashMap::<u16,String>::new();
        codes.insert(100, String::from("Continue"));
        codes.insert(101, String::from("Switching Protocols"));
        codes.insert(102, String::from("Processing"));
        codes.insert(200, String::from("OK"));
        codes.insert(201, String::from("Created"));
        codes.insert(202, String::from("Accepted"));
        codes.insert(203, String::from("Non-authoritative Information"));
        codes.insert(204, String::from("No Content"));
        codes.insert(205, String::from("Reset Content"));
        codes.insert(206, String::from("Partial Content"));
        codes.insert(207, String::from("Multi-Status"));
        codes.insert(208, String::from("Already Reported"));
        codes.insert(226, String::from("IM Used"));
        codes.insert(300, String::from("Multiple Choices"));
        codes.insert(301, String::from("Moved Permanently"));
        codes.insert(302, String::from("Found"));
        codes.insert(303, String::from("See Other"));
        codes.insert(304, String::from("Not Modified"));
        codes.insert(305, String::from("Use Proxy"));
        codes.insert(307, String::from("Temporary Redirect"));
        codes.insert(308, String::from("Permanent Redirect"));
        codes.insert(400, String::from("Bad Request"));
        codes.insert(401, String::from("Unauthorized"));
        codes.insert(402, String::from("Payment Required"));
        codes.insert(403, String::from("Forbidden"));
        codes.insert(404, String::from("Not Found"));
        codes.insert(405, String::from("Method Not Allowed"));
        codes.insert(406, String::from("Not Acceptable"));
        codes.insert(407, String::from("Proxy Authentication Required"));
        codes.insert(408, String::from("Request Timeout"));
        codes.insert(409, String::from("Conflict"));
        codes.insert(410, String::from("Gone"));
        codes.insert(411, String::from("Length Required"));
        codes.insert(412, String::from("Precondition Failed"));
        codes.insert(413, String::from("Payload Too Large"));
        codes.insert(414, String::from("Request-URI Too Long"));
        codes.insert(415, String::from("Unsupported Media Type"));
        codes.insert(416, String::from("Requested Range Not Satisfiable"));
        codes.insert(417, String::from("Expectation Failed"));
        codes.insert(418, String::from("I'm a teapot"));
        codes.insert(421, String::from("Misdirected Request"));
        codes.insert(422, String::from("Unprocessable Entity"));
        codes.insert(423, String::from("Locked"));
        codes.insert(424, String::from("Failed Dependency"));
        codes.insert(426, String::from("Upgrade Required"));
        codes.insert(428, String::from("Precondition Required"));
        codes.insert(429, String::from("Too Many Requests"));
        codes.insert(431, String::from("Request Header Fields Too Large"));
        codes.insert(444, String::from("Connection Closed Without Response"));
        codes.insert(451, String::from("Unavailable For Legal Reasons"));
        codes.insert(499, String::from("Client Closed Request"));
        codes.insert(500, String::from("Internal Server Error"));
        codes.insert(501, String::from("Not Implemented"));
        codes.insert(502, String::from("Bad Gateway"));
        codes.insert(503, String::from("Service Unavailable"));
        codes.insert(504, String::from("Gateway Timeout"));
        codes.insert(505, String::from("HTTP Version Not Supported"));
        codes.insert(506, String::from("Variant Also Negotiates"));
        codes.insert(507, String::from("Insufficient Storage"));
        codes.insert(508, String::from("Loop Detected"));
        codes.insert(510, String::from("Not Extended"));
        codes.insert(511, String::from("Network Authentication Required"));
        codes.insert(599, String::from("Network Connect Timeout Error"));
        codes
    };
}